---
import { getCollection } from 'astro:content';
import Cards from './Cards.astro';
import SearchWithDropdown from './SearchWithDropdown.astro';
import { type Props as CardProps } from './Card.astro';

const faqs = await getCollection('faqs');

const cards: CardProps[] = [
  ...faqs.map(({ data, slug, collection }) => {
    return {
      title: data.title,
      description: data.description,
      btnHref: `/content/faqs/${slug}`,
      tags: data.tags,
      type: collection,
      slug,
    };
  }),
];
---

<script>
  const includesText = (searchQuery: string) => {
    return (text?: string) => text?.toLowerCase().includes(searchQuery?.toLowerCase());
  };

  const resetDisplay = (card: HTMLElement) => {
    card.style.display = 'grid';
  };

  const searchForm = document.querySelector('#search-dropdown-form') as HTMLFormElement;

  searchForm.addEventListener('submit', (event) => {
    event.preventDefault();
  });

  const searchInput = document.querySelector('#search-dropdown') as HTMLInputElement;
  const cards = document.querySelectorAll('[data-card]') as NodeListOf<HTMLElement>;

  searchInput.focus();

  searchInput.addEventListener('input', (event) => {
    const inputText = (event?.target as HTMLInputElement)?.value;
    cards.forEach((card) => {
      const { title, description, tags, type } = JSON.parse(
        card.dataset.card ?? '{}',
      ) as import('./Card.astro').Props;
      if (inputText) {
        if (
          includesText(inputText)(title) ||
          includesText(inputText)(description) ||
          tags?.some(includesText(inputText))
        ) {
          resetDisplay(card);
        } else {
          card.style.display = 'none';
        }
      } else {
        resetDisplay(card);
      }
    });
  });

  const searchQuery = new URLSearchParams(window.location.search).get('q');
  if (searchQuery) {
    searchInput.value = searchQuery;
    searchInput.dispatchEvent(new Event('input'));
  }
</script>

<SearchWithDropdown class="mb-6" dropdownButtons={['Apps', 'FAQs']} />
<Cards cards={cards} />
