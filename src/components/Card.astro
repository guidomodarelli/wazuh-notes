---
import ArrowRight from '../assets/icons/ArrowRight.astro';
import Tag from "./Tag.astro";

export interface Props {
  title?: string;
  description?: string;
  btnText?: string;
  btnHref?: string;
  type: string;
  tags?: string[];
  slug?: string;
}

const { title, description, btnText: readMoreBtn = 'Read more', btnHref, tags = [], type } = Astro.props;
---

<div class="card" data-card={JSON.stringify(Astro.props)} data-card-type={type}>
  <div class="card-header">
    <h5 class="title">{title}</h5>
  </div>
  <div class="card-content">
    <p>
      {description}
    </p>
  </div>
  <div class="card-footer">
    <div class="tags">
      {tags?.map((tag) => <Tag tag={tag} color="dark" rounded />)}
    </div>
    <div>
      <a href={btnHref}>
        {readMoreBtn}
        <ArrowRight class="ms-2" />
      </a>
    </div>
  </div>
</div>

<style>
  [data-card-dont-match-search] {
    display: none;
  }
  [data-card-dont-show-on-type] {
    display: none;
  }
</style>

<style lang="scss">
  .card {
    @apply grid gap-3 max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow;

    &:is(.dark *) {
      @apply bg-gray-800 border-gray-700;
    }

    &-header {
      .title {
        @apply mb-2 text-2xl font-bold;
      }
    }

    &-footer {
      @apply flex flex-col gap-6;
      align-self: flex-end;

      a {
        @apply inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg;

        :hover {
          @apply bg-blue-800;
        }

        :focus {
          @apply ring-4 outline-none ring-blue-300;
        }

        &:is(.dark *) {
          @apply bg-blue-600;

          :hover {
            @apply bg-blue-700;
          }

          :focus {
            @apply ring-blue-800;
          }
        }
      }
    }

    .tags {
      @apply flex flex-wrap gap-2;
    }
  }
</style>
