---
import { getCollection, getEntry } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import Tag from '../../../components/Tag.astro';
import { extractAdocFilenamesFromCollection } from '../../../content/extract-adoc-filenames-from-collection';
import { COLLECTION } from '../../../content/constants';
import { getAdocFileFromCollection } from '../../../content/get-adoc-file-from-collection';
import type { Document } from 'asciidoctor';

export async function getStaticPaths() {
  const adocVagrantFileNames = await extractAdocFilenamesFromCollection(COLLECTION.VAGRANTS);
  const vagrants = await getCollection(COLLECTION.VAGRANTS);

  return [
    ...adocVagrantFileNames.map((adocVagrantFileName) => ({ params: { vagrant: adocVagrantFileName } })),
    ...vagrants.map((vagrant) => ({ params: { vagrant: vagrant.slug } })),
  ];
}

const { vagrant } = Astro.params;
const entry = await getEntry(COLLECTION.VAGRANTS, vagrant);

let title: string, description: string, tags: string[], link: string;
let Content: any;
let adoc: Document | undefined;

if (entry) {
  ({ title, tags = [], description, link } = entry.data);
  ({ Content } = await entry.render());
} else {
  adoc = getAdocFileFromCollection(COLLECTION.VAGRANTS, vagrant);
  title = adoc.getAttribute('doctitle');
  description = adoc.getAttribute('description');
  tags = JSON.parse(adoc.getAttribute('tags') ?? '[]');
  link = adoc.getAttribute('link');
}
---

<Layout title={title}>
  <div class="render-content">
    <div class="mb-6">
      <h1>{title}</h1>
      <div class="tags">
        {tags.map((tag) => <Tag tag={tag} color="dark" />)}
      </div>
      <p>{description}</p>
      Refer to the <a href={link} rel="noopener noreferrer" target="_blank">Vagrant box</a>
    </div>
    {adoc === undefined ? <Content /> : <Fragment set:html={adoc.convert()} />}
  </div>
</Layout>

<style lang="scss">
  .tags {
    @apply flex flex-wrap gap-2 mb-6;
  }
</style>
