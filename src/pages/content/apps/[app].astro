---
import { getCollection, getEntry } from 'astro:content';
import { COLLECTION } from '../../../content/constants';
import { extractAdocFilenamesFromCollection } from '../../../content/extract-adoc-filenames-from-collection';
import Layout from '../../../layouts/Layout.astro';
import { getAdocFileFromCollection } from '../../../content/get-adoc-file-from-collection';
import type { Document } from 'asciidoctor';
import Tag from '../../../components/Tag.astro';

export async function getStaticPaths() {
  const adocAppFileNames = await extractAdocFilenamesFromCollection(COLLECTION.APPS);
  const apps = await getCollection(COLLECTION.APPS);

  return [
    ...adocAppFileNames.map((adocAppFileName) => ({ params: { app: adocAppFileName } })),
    ...apps.map((app) => ({ params: { app: app.slug } })),
  ];
}

const { app } = Astro.params;
const entry = await getEntry(COLLECTION.APPS, app);

let title: string, tags: string[], description: string, doclink: string;
let Content: any;
let adoc: Document | undefined;

if (entry) {
  ({ title, tags = [], description, doclink } = entry.data);
  ({ Content } = await entry.render());
} else {
  adoc = getAdocFileFromCollection(COLLECTION.APPS, app);
  title = adoc.getAttribute('doctitle');
  tags = JSON.parse(adoc.getAttribute('tags') ?? '[]');
  description = adoc.getAttribute('description');
  doclink = adoc.getAttribute('doclink');
}
---

<Layout title={title}>
  <div class="render-content">
    <div class="header">
      <h1>{title}</h1>
      <div class="tags">
        {tags.map((tag) => <Tag tag={tag} color="dark" />)}
      </div>
      <p>{description}</p>
      <a href={doclink} rel="noopener noreferrer" target="_blank">Documentation</a>
    </div>
    <div class="content">{adoc === undefined ? <Content /> : <Fragment set:html={adoc.convert()} />}</div>
  </div>
</Layout>

<style lang="scss">
  .tags {
    @apply flex flex-wrap gap-2 mb-6;
  }

  .header {
    @apply mb-6;
  }
</style>
