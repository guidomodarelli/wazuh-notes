---
import { getCollection, getEntry } from 'astro:content';
import { COLLECTION } from "../../../content/constants";
import { extractAdocFilenamesFromDirectory } from '../../../content/extract-adoc-filenames-from-directory';
import Layout from '../../../layouts/Layout.astro';
import { getAdocFileFromCollection } from "../../../content/get-adoc-file-from-collection";

export async function getStaticPaths() {
  const adocAppFileNames = await extractAdocFilenamesFromDirectory(COLLECTION.APPS);
  const apps = await getCollection(COLLECTION.APPS);

  return [
    ...adocAppFileNames.map((adocAppFileName) => ({ params: { app: adocAppFileName } })),
    ...apps.map((app) => ({ params: { app: app.slug } })),
  ];
}

const { app } = Astro.params;
const entry = await getEntry(COLLECTION.APPS, app);

let appname: string, description: string, doclink: string;
let Content: any;

if (entry) {
  ({ appname, description, doclink } = entry.data);
  ({ Content } = await entry.render());
} else {
  const adoc = await getAdocFileFromCollection(COLLECTION.APPS, app);
  appname = adoc.frontmatter.asciidoc.appname;
  description = adoc.frontmatter.asciidoc.description;
  doclink = adoc.frontmatter.asciidoc.doclink;
  Content = adoc.Content;
}
---

<Layout title={appname}>
  <div class="content markdown">
    <h1>{appname}</h1>
    <p>{description}</p>
    <Content />
  </div>
</Layout>

<style lang="scss">
  .tags {
    @apply flex flex-wrap gap-2 mb-6;
  }
</style>
