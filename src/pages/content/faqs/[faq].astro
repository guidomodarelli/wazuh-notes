---
import { getCollection, getEntry } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import Tag from '../../../components/Tag.astro';
import { extractAdocFilenamesFromCollection } from '../../../content/extract-adoc-filenames-from-collection';
import { COLLECTION } from "../../../content/constants";
import { getAdocFileFromCollection } from "../../../content/get-adoc-file-from-collection";
import type { Document } from "asciidoctor";

export async function getStaticPaths() {
  const adocFaqFileNames = await extractAdocFilenamesFromCollection(COLLECTION.FAQS);
  const faqs = await getCollection(COLLECTION.FAQS);

  return [
    ...adocFaqFileNames.map((adocFaqFileName) => ({ params: { faq: adocFaqFileName } })),
    ...faqs.map((faq) => ({ params: { faq: faq.slug } })),
  ];
}

const { faq } = Astro.params;
const entry = await getEntry(COLLECTION.FAQS, faq);

let title: string, description: string, tags: string[];
let Content: any;
let adoc: Document | undefined;

if (entry) {
  ({ title, tags, description } = entry.data);
  ({ Content } = await entry.render());
} else {
  adoc = await getAdocFileFromCollection(COLLECTION.FAQS, faq);
  title = adoc.getAttribute('doctitle');
  description = adoc.getAttribute('description');
  tags = JSON.parse(adoc.getAttribute('tags') ?? '[]');
}
---

<Layout title={title}>
  <div class="render-content">
    <h1>{title}</h1>
    <div class="tags">
      {tags.map((tag) => <Tag tag={tag} color="dark" />)}
    </div>
    <p>{description}</p>
    {adoc === undefined ? <Content /> : <Fragment set:html={adoc.convert()} />}
  </div>
</Layout>

<style lang="scss">
  .tags {
    @apply flex flex-wrap gap-2 mb-6;
  }
</style>
