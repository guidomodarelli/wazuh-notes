---
import { getEntry } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import Tag from '../../../components/Tag.astro';

export function getStaticPaths() {
  return [
    { params: { faq: 'backup-alerting-data' } },
    { params: { faq: 'elasticsearch-circuit-breaker-exception' } },
    { params: { faq: 'elasticsearch-document-level-security' } },
    { params: { faq: 'elasticsearch-reached-shards-limit-by-node' } },
    { params: { faq: 'enable-audit-logs' } },
    { params: { faq: 'enable-wazuh-archives' } },
    { params: { faq: 'erase-corrupted-kibana-index' } },
    { params: { faq: 'filebeat-hide-plain-configuration-values' } },
    { params: { faq: 'filebeat-modify-ingest-pipeline' } },
    { params: { faq: 'filebeat-wrong-distribution' } },
    { params: { faq: 'filter-searches-in-discover-using-ip-ranges-or-network-mask-with-dql' } },
    { params: { faq: 'kibana-secure-security-authentication-cookie' } },
    { params: { faq: 'logs-retention' } },
    { params: { faq: 'logs-rotation' } },
    { params: { faq: 'monitor-network-devices' } },
    { params: { faq: 'odfe-user-permissions-saved-objects' } },
    { params: { faq: 'opensearch-restrict-internal-user-password' } },
    { params: { faq: 'remove-no-secure-url-browser' } },
    { params: { faq: 'reporting-error-missing-dependencies' } },
    { params: { faq: 'separate-conditionally-events-to-different-indices' } },
    { params: { faq: 'server-is-not-ready-yet' } },
    { params: { faq: 'wazuh-app-for-kibana-missing-token-cookie' } },
    { params: { faq: 'wazuh-app-for-kibana-permission-deploy-new-agent' } },
    { params: { faq: 'wazuh-app-for-kibana-statistics-monitoring-jobs-user-permissions' } },
    { params: { faq: 'wazuh-dashboard-missing-plugins' } },
    { params: { faq: 'wazuh-dashboard-set-home-page' } },
    { params: { faq: 'wazuh-indexer-add-node-to-cluster' } },
    { params: { faq: 'wazuh-kibana-plugin-customize-plugin-names' } },
    { params: { faq: 'wazuh-plugin-alerts-not-showing' } },
    { params: { faq: 'wazuh-server-eps' } },
  ];
}

const { faq } = Astro.params;
const entry = await getEntry('faqs', faq);

let title: string, description: string, tags: string[];
let Content: any;

if (entry) {
  ({ title, tags, description } = entry.data);
  ({ Content } = await entry.render());
} else {
  const adoc = await import(`../../../content/faqs/${faq}.adoc`);
  title = adoc.frontmatter.asciidoc.doctitle;
  description = adoc.frontmatter.asciidoc.description;
  tags = JSON.parse(adoc.frontmatter.asciidoc.tags ?? '[]');
  Content = adoc.Content;
}
---

<Layout title={title}>
  <div class="content markdown">
    <h1>{title}</h1>
    <div class="tags">
      {tags.map((tag) => <Tag tag={tag} color="dark" />)}
    </div>
    <p>{description}</p>
    <Content />
  </div>
</Layout>

<style lang="scss">
  .tags {
    @apply flex flex-wrap gap-2 mb-6;
  }
</style>
